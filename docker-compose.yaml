version: '3.9'

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - ./backend/.env.db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/initdb:/docker-entrypoint-initdb.d
    networks:
      - pmnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  backend:
    image: eclipse-temurin:21-jdk-alpine
    container_name: pm-backend
    working_dir: /app
    command: sh -c "./gradlew bootRun"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env.backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_started
    networks:
      - pmnet
    # healthcheck eliminado para desarrollo

  frontend:
    image: node:24-bookworm
    container_name: pm-frontend
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    env_file:
      - ./frontend/.env.frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_started
    networks:
      - pmnet

volumes:
  db_data:
  frontend_node_modules:

networks:
  pmnet:
    driver: bridge
